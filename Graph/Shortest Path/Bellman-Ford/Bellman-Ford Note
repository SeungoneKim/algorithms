<Bellman-Ford Note>

- 하나의 정점에서 다른 모든 정점으로의 최단경로를 구할 수 있는 알고리즘이다.(Single Source Shortest Path Problem)
- 가중치가 음수인 경우에 유일하게 사용할 수 있는 최단경로 알고리즘이다.

- 인접행렬, 인접리스트를 사용할 필요가 없다.
- 왜냐하면, 모든 정점과 간선을 모두 다 둘러보기 때문이다.

- 벨만포드 알고리즘은 E개의 간선에 대해서 조건 검사식을 1번씩 모두 돌리며, 이 과정을 총 V-1번 진행한다.
- 벨만포드 알고리즘은 시간복잡도가 O(VE)이고, E<=V^2이므로, O(V^3)이라고 할 수 있다.

- 벨만포드 알고리즘을 음수인 가중치가 존재할 때도 사용할 수 있는 것은 음수사이클의 존재성을 check할 수 있는 유일한 알고리즘이기 때문이다.
- (V-1)번의 단계를 거쳐서 (E개의 간선의 정보를 바탕으로 dist배열을 update하는 작업) 최단경로가 나와야한다.
- 이때, V번째 단계를 한번 더 진행 할 때, 최단경로가 변하면 음수 사이클이 존재하는 것이다.

/*
// code
dist[i];

for(int i=1;i<=v;i++){
    for(int k=1;k<=e;k++){
        if(dist[to]>dist[from]+cost){
            dist[to]=dist[from]+cost;
        }
    }
}
*/

- 음수인 경로를 고려하여 최단경로의 가중치합을 구하거나, 음수 사이클의 여부를 묻는 문제등이 출제될 수 있다.