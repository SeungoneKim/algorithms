<MST Note>

- Minimum Spanning Tree
- 스패닝 트리 : 그래프에서 일부 간선을 선택하여서 만든 트리
- 최소 스패닝 트리 : 스패닝 트리 중에서 선택한 간선의 가중치의 합이 최소인 트리

- 최소 스패닝 트리를 찾는 두 가지 알고리즘은 프림(Prim)알고리즘과 크루스칼(Kruskal)알고리즘이다.

- 프림 알고리즘은 그리디 알고리즘으로 구현한 것이다.
- 크루스칼 알고리즘은 유니온 파인드로 구현한 것이다.

- 프림 알고리즘은 정점을 기준으로 해서 MST에 추가하는 방법이다.
- 크루스칼 알고리즘은 간선을 기준으로 해서 MST에 추가하는 방법이다.


<프림 알고리즘>
1. 그래프에서 아무 정점이나 선택한다.
2. 선택한 정점과 선택하지 않은 정점을 연결하는 간선중에서 최소값을 고르고, 이 간선을 (u,v)라고 하자.
3. 선택한 간선을 MST에 추가하고, v를 선택한다.
4. 모든 정점을 선택하지 않았다면, 2단계로 돌아간다.

- 각각의 정점을 선택하고 모든 간선을 살펴보아야한다.
- O(V*E), 최대 O(V^3)

- 우선순위 큐를 사용하면 시간복잡도를 O(ElgE)로 줄일 수 있다.
- 가장 가중치가 작은 간선을 찾기 위한 시간복잡도가 O(lgE), 모든 간선을 큐에 넣을 때 시간복잡도가 O(E)이다.


<크루스칼 알고리즘>
1. 가중치가 작은 Edge부터 순서대로 살펴본다.
2. Edge e가 (u,v,c)일 때, u와 v가 서로 다른 집합이면 e를 MST에 추가한다.

- 정렬하는데 O(ElgE), Union-Find하는데 O(E)가 걸리므로 총 시간 복잡도가 O(ElgE)이다. 